#!/bin/bash

#pircbot
cp="pircbot.jar:."

#boilerpipe
bp="boilerpipe-1.2.0"
if [ ! -e "$bp/$bp.jar" ]; then
    echo "trying to get boilerpipe"
    wget https://boilerpipe.googlecode.com/files/$bp-bin.tar.gz &> /dev/null
    tar xvzf $bp-bin.tar.gz &> /dev/null
    rm $bp-bin.tar.gz &> /dev/null
    [ ! -e "$bp/$bp.jar" ] && echo "boilerpipe not present" && exit
fi
cp+=":$bp/$bp.jar:$bp/lib/nekohtml-1.9.13.jar:$bp/lib/xerces-2.9.1.jar"

#langdetect
ldet="langdetect"
if [ ! -e "langdetect/lib/langdetect.jar" ]; then
    echo "trying to get langdetect"
    wget http://language-detection.googlecode.com/files/langdetect-09-13-2011.zip &> /dev/null
    unzip langdetect-09-13-2011.zip -d langdetect &> /dev/null
    rm langdetect-09-13-2011.zip &> /dev/null
    [ ! -e "langdetect/lib/langdetect.jar" ] && echo "langdetect not present" && exit
fi
cp+=":langdetect/lib/langdetect.jar"

args="$2"
bot="`basename $1 .scala`"

compile() {
    echo "compiling $bot"
    mkdir bin &> /dev/null
    cp+=":bin"
    scalac -optimise -d bin -cp $cp Utils.scala $bot.scala
}

run() {
    runcmd="scala -cp $cp haibot.$bot"
    case "$args" in
        -c) echo "not gonna run $bot.";;
        -f) echo "running $bot..." && $runcmd;;
         *) echo "putting $bot into background..." && { $runcmd &>> $bot.log & }
    esac
}

if [ $bot.scala -nt bin/haibot/$bot.class ] || [ "$args" == "-c" ]; then
    compile && run
else
    run
fi
