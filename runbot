#!/bin/bash

echo "Hai!"

#pircbot
cp="pircbot.jar:."

#boilerpipe
bp="boilerpipe-1.2.0"
if [ ! -e "lib/$bp/$bp.jar" ]; then
    echo "trying to get $bp"
    mkdir lib &> /dev/null
    cd lib
    wget https://boilerpipe.googlecode.com/files/$bp-bin.tar.gz &> /dev/null
    tar xvzf $bp-bin.tar.gz &> /dev/null
    rm $bp-bin.tar.gz &> /dev/null
    cd ..
    [ ! -e "lib/$bp/$bp.jar" ] && echo "getting $bp failed" && exit
fi
cp+=":lib/$bp/$bp.jar:lib/$bp/lib/nekohtml-1.9.13.jar:lib/$bp/lib/xerces-2.9.1.jar"

#prolog wordnet db
wn="WNprolog-3.0"
if [ ! -e "lib/prolog/wn_ant.db" ]; then
    echo "trying to get $wn"
    mkdir lib &> /dev/null
    cd lib
    wget http://wordnetcode.princeton.edu/3.0/$wn.tar.gz &> /dev/null
    tar xvzf $wn.tar.gz &> /dev/null
    rm $wn.tar.gz &> /dev/null
    if [ -e "prolog/wn_ant.pl" ]; then
        cd prolog
        #strip prolog syntax
        for db in *.pl; do
            skip=$( echo `expr length $db`-6+2 | bc )
            cat $db | cut -b $skip- | awk 'sub("..$", "")' > `basename $db .pl`.db
        done
        cd ..
    fi
    cd ..
    [ ! -e "lib/prolog" ] && echo "getting $wn failed" && exit
fi

if [ "`which t`" == "" ]; then echo "it might work anyway, if not, set up t the twitter client."; fi
if [ "`which fbcmd`" == "" ]; then echo "it might work anyway, if not, set up fbcmd the twitter client."; fi

args="$1"
bot="haibot"
outdir="bin"
cp+=":$outdir"
logdir="logs"
mkdir $logdir &> /dev/null
mkdir $outdir &> /dev/null

compile() {
    echo "static checking :)"
    echo "  checking if forgot to put Seq(...).random"
    grep --color=auto -rnE 'Seq[(]([^")]*"[^"]*")*[^)]*[)][ ]*([+][^+]|,[ ]*$)' *.scala
    echo "  checking if forgot s before string interpolation"
    grep --color=auto -rnP '[,( +]["]{1,3}(?!.*[,( +]s").*[$][^"|]' *.scala

    echo "compiling $bot"
    rm -rf $outdir &> /dev/null
    mkdir $outdir &> /dev/null
    scalac -Xlint -deprecation -optimise -feature -d $outdir -cp $cp Utils.scala $bot.scala
}

run() {
    runcmd="scala -cp $cp haibot.$bot"
    case "$args" in
        -c) echo "not gonna run $bot.";;
        -f) echo "running $bot..." && $runcmd;;
         *) echo "putting $bot into background..." && { $runcmd &>> $logdir/$bot.log & }
    esac
}

if [[ $bot.scala -nt $outdir/haibot/$bot.class ]] || [[ Utils.scala -nt $outdir/haibot/Utils.class ]] || [[ "$args" == "-c" ]]; then
    compile && run
else
    run
fi
